# Generated by Django 5.0.7 on 2024-09-11 02:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GameInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_num', models.BigIntegerField()),
                ('nickname', models.CharField(max_length=20)),
                ('game_id', models.BigIntegerField()),
                ('season_id', models.IntegerField()),
                ('matching_mode', models.IntegerField()),
                ('matching_team_mode', models.IntegerField()),
                ('server_name', models.CharField(max_length=100)),
                ('character_num', models.IntegerField()),
                ('start_dtm', models.DateTimeField()),
                ('play_time', models.IntegerField()),
                ('watch_time', models.IntegerField()),
                ('total_time', models.IntegerField()),
                ('bot_added', models.IntegerField()),
                ('bot_remain', models.IntegerField()),
                ('restricted_area_accelerated', models.BooleanField()),
                ('safe_areas', models.IntegerField()),
                ('team_number', models.IntegerField()),
                ('pre_made', models.IntegerField()),
                ('victory', models.BooleanField()),
                ('game_rank', models.IntegerField()),
                ('mmr_before', models.IntegerField(null=True)),
                ('mmr_gain', models.IntegerField(null=True)),
                ('mmr_after', models.IntegerField(null=True)),
                ('give_up', models.IntegerField()),
                ('route_id_of_start', models.IntegerField()),
                ('mmr_avg', models.IntegerField()),
            ],
            options={
                'indexes': [models.Index(fields=['user_num'], name='thomas_game_user_nu_77c084_idx'), models.Index(fields=['game_id'], name='thomas_game_game_id_3c5809_idx'), models.Index(fields=['start_dtm'], name='thomas_game_start_d_9778b1_idx')],
                'unique_together': {('user_num', 'game_id')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentAndTraits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skin_code', models.IntegerField()),
                ('best_weapon', models.IntegerField()),
                ('best_weapon_level', models.IntegerField()),
                ('mastery_level', models.JSONField()),
                ('equipment', models.JSONField()),
                ('skill_level_info', models.JSONField()),
                ('skill_order_info', models.JSONField()),
                ('trait_first_core', models.IntegerField()),
                ('trait_first_sub', models.JSONField()),
                ('trait_second_sub', models.JSONField()),
                ('tactical_skill_group', models.IntegerField()),
                ('tactical_skill_level', models.IntegerField()),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='thomas.gameinfo')),
            ],
            options={
                'indexes': [models.Index(fields=['game'], name='thomas_equi_game_id_01f340_idx')],
            },
        ),
        migrations.CreateModel(
            name='BattleRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_level', models.IntegerField()),
                ('team_kills', models.IntegerField()),
                ('player_kill', models.IntegerField()),
                ('player_assistant', models.IntegerField()),
                ('monster_kill', models.IntegerField()),
                ('max_hp', models.IntegerField()),
                ('max_sp', models.IntegerField()),
                ('attack_power', models.IntegerField()),
                ('move_speed', models.FloatField()),
                ('defense', models.IntegerField()),
                ('hp_regen', models.FloatField()),
                ('sp_regen', models.FloatField()),
                ('attack_speed', models.FloatField()),
                ('sight_range', models.FloatField()),
                ('critical_strike_chance', models.FloatField()),
                ('critical_strike_damage', models.FloatField()),
                ('cool_down_reduction', models.FloatField()),
                ('life_steal', models.FloatField()),
                ('damage_to_player', models.IntegerField()),
                ('damage_to_monster', models.IntegerField()),
                ('damage_from_player', models.IntegerField()),
                ('heal_amount', models.IntegerField()),
                ('protect_absorb', models.IntegerField()),
                ('total_double_kill', models.IntegerField()),
                ('total_triple_kill', models.IntegerField()),
                ('total_quadra_kill', models.IntegerField()),
                ('total_extra_kill', models.IntegerField()),
                ('killer_user_num', models.IntegerField()),
                ('killer', models.CharField(max_length=100, null=True)),
                ('kill_detail', models.CharField(max_length=100, null=True)),
                ('killer_character', models.CharField(max_length=100, null=True)),
                ('killer_weapon', models.CharField(max_length=100, null=True)),
                ('cause_of_death', models.CharField(max_length=100, null=True)),
                ('place_of_death', models.IntegerField(null=True)),
                ('killer_user_num2', models.IntegerField()),
                ('killer2', models.CharField(max_length=100, null=True)),
                ('kill_detail2', models.CharField(max_length=100, null=True)),
                ('killer_character2', models.CharField(max_length=100, null=True)),
                ('killer_weapon2', models.CharField(max_length=100, null=True)),
                ('cause_of_death2', models.CharField(max_length=100, null=True)),
                ('place_of_death2', models.IntegerField(null=True)),
                ('killer_user_num3', models.IntegerField()),
                ('killer3', models.CharField(max_length=100, null=True)),
                ('kill_detail3', models.CharField(max_length=100, null=True)),
                ('killer_character3', models.CharField(max_length=100, null=True)),
                ('killer_weapon3', models.CharField(max_length=100, null=True)),
                ('cause_of_death3', models.CharField(max_length=100, null=True)),
                ('place_of_death3', models.IntegerField(null=True)),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='thomas.gameinfo')),
            ],
            options={
                'indexes': [models.Index(fields=['game'], name='thomas_batt_game_id_3e91ac_idx')],
            },
        ),
    ]
